import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

# Load the data
data = pd.read_csv('insurance.csv')

# Convert categorical data to numbers
data['sex'] = data['sex'].map({'male': 0, 'female': 1})
data['smoker'] = data['smoker'].map({'no': 0, 'yes': 1})
data['region'] = data['region'].map({'southwest': 0, 'southeast': 1, 'northwest': 2, 'northeast': 3})

# Split the data into train and test datasets
train_dataset, test_dataset = train_test_split(data, test_size=0.2, random_state=42)

# Separate labels from features
train_labels = train_dataset.pop('expenses')
test_labels = test_dataset.pop('expenses')

# Create and train the model
model = LinearRegression()
model.fit(train_dataset, train_labels)

# Evaluate the model
predictions = model.predict(test_dataset)
mae = mean_absolute_error(test_labels, predictions)
print("Mean Absolute Error:", mae)

# Graph the results
plt.figure(figsize=(10, 6))
plt.title("Actual vs Predicted Expenses")
sns.scatterplot(test_labels, predictions)
plt.xlabel("Actual Expenses")
plt.ylabel("Predicted Expenses")
plt.show()
